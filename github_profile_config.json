{
  "scan_configuration": {
    "base_path": "/workspace",
    "recursive_scan": true,
    "max_depth": 5,
    "follow_symlinks": false,
    "file_size_limit_mb": 10,
    "skip_binary_files": true
  },
  "exclusions": {
    "patterns": [
      "\\.git$",
      "\\.vscode$",
      "\\.idea$",
      "\\.cache$",
      "\\.tmp$",
      "\\.temp$",
      "node_modules$",
      "vendor$",
      "__pycache__$",
      "\\.pyc$",
      "\\.log$",
      "\\.env$",
      "\\.DS_Store$"
    ],
    "windows_system_folders": [
      "AppData",
      "Desktop",
      "Downloads",
      "Documents",
      "Pictures",
      "Music",
      "Videos",
      "OneDrive",
      "Program Files",
      "ProgramData",
      "Windows",
      "System32",
      "SysWOW64",
      "Temp",
      "TMP",
      "Recycler",
      "Recovery",
      "Boot",
      "EFI",
      "MSOCache",
      "PerfLogs",
      "Prefetch"
    ]
  },
  "project_indicators": {
    "root_files": [
      "package.json",
      "composer.json",
      "requirements.txt",
      "pom.xml",
      "build.gradle",
      "Cargo.toml",
      "go.mod",
      "Gemfile",
      "Podfile",
      "pubspec.yaml",
      "mix.exs",
      "project.clj",
      "dune",
      "CMakeLists.txt",
      "Makefile",
      "Dockerfile",
      "docker-compose.yml",
      "terraform.tf",
      "serverless.yml",
      "webpack.config.js",
      "vite.config.js",
      "next.config.js",
      "nuxt.config.js",
      "angular.json",
      "tsconfig.json",
      "eslint.config.js",
      "prettier.config.js",
      "jest.config.js",
      "pytest.ini",
      "setup.py",
      "pyproject.toml",
      "composer.lock",
      "package-lock.json",
      "yarn.lock",
      "Gemfile.lock",
      "Podfile.lock"
    ],
    "config_files": [
      ".gitignore",
      ".env.example",
      ".eslintrc",
      ".prettierrc",
      ".babelrc",
      ".nvmrc",
      ".python-version",
      ".ruby-version",
      ".node-version",
      "tsconfig.json",
      "jsconfig.json",
      "webpack.config.js",
      "rollup.config.js",
      "vite.config.js",
      "tailwind.config.js",
      "postcss.config.js",
      "babel.config.js",
      "jest.config.js",
      "cypress.config.js",
      "playwright.config.js",
      "storybook.config.js",
      "next.config.js",
      "nuxt.config.js",
      "angular.json",
      "vue.config.js",
      "quasar.config.js",
      "capacitor.config.ts",
      "ionic.config.json",
      "electron-builder.json",
      "forge.config.js",
      "tauri.conf.json",
      "electron.vite.config.ts"
    ],
    "documentation_files": [
      "README.md",
      "README.txt",
      "README",
      "LICENSE",
      "LICENSE.txt",
      "CHANGELOG.md",
      "CHANGELOG.txt",
      "CHANGELOG",
      "CONTRIBUTING.md",
      "CONTRIBUTING.txt",
      "CONTRIBUTING",
      "CONTRIBUTORS.md",
      "CONTRIBUTORS.txt",
      "CONTRIBUTORS",
      "AUTHORS.md",
      "AUTHORS.txt",
      "AUTHORS",
      "CREDITS.md",
      "CREDITS.txt",
      "CREDITS",
      "HISTORY.md",
      "HISTORY.txt",
      "HISTORY",
      "RELEASES.md",
      "RELEASES.txt",
      "RELEASES",
      "VERSION.md",
      "VERSION.txt",
      "VERSION",
      "BUILD.md",
      "BUILD.txt",
      "BUILD",
      "DEPLOYMENT.md",
      "DEPLOYMENT.txt",
      "DEPLOYMENT",
      "API.md",
      "API.txt",
      "API",
      "DOCS.md",
      "DOCS.txt",
      "DOCS",
      "GUIDE.md",
      "GUIDE.txt",
      "GUIDE",
      "TUTORIAL.md",
      "TUTORIAL.txt",
      "TUTORIAL",
      "WIKI.md",
      "WIKI.txt",
      "WIKI"
    ],
    "code_file_extensions": [
      ".py",
      ".js",
      ".jsx",
      ".ts",
      ".tsx",
      ".php",
      ".java",
      ".kt",
      ".scala",
      ".groovy",
      ".clj",
      ".hs",
      ".ml",
      ".fs",
      ".rs",
      ".go",
      ".c",
      ".cpp",
      ".cc",
      ".cxx",
      ".h",
      ".hpp",
      ".hh",
      ".hxx",
      ".cs",
      ".vb",
      ".swift",
      ".m",
      ".mm",
      ".dart",
      ".r",
      ".sql",
      ".pl",
      ".rb",
      ".sh",
      ".ps1",
      ".bat",
      ".cmd",
      ".html",
      ".htm",
      ".xhtml",
      ".xml",
      ".css",
      ".scss",
      ".sass",
      ".less",
      ".styl",
      ".vue",
      ".svelte",
      ".elm",
      ".cljs",
      ".re",
      ".ml",
      ".fs",
      ".fsx",
      ".fsi",
      ".fsscript",
      ".coffee",
      ".litcoffee",
      ".coffee.md",
      ".iced",
      ".ls",
      ".pyx",
      ".pxd",
      ".pxi",
      ".pyi",
      ".ipynb",
      ".rpy",
      ".rpyb",
      ".rpyc",
      ".rpyo",
      ".rpyw",
      ".rpyx",
      ".rpyz",
      ".rpywz",
      ".rpyc",
      ".rpyo",
      ".rpyw",
      ".rpyx",
      ".rpyz",
      ".rpywz"
    ]
  },
  "project_classification": {
    "web_frontend": {
      "indicators": ["react", "vue", "angular", "svelte", "next.js", "nuxt", "gatsby", "sveltekit"],
      "file_patterns": ["*.jsx", "*.tsx", "*.vue", "*.svelte", "*.html", "*.css", "*.scss"],
      "description": "Modern web frontend applications with reactive frameworks"
    },
    "web_backend": {
      "indicators": ["django", "flask", "fastapi", "laravel", "symfony", "express", "koa", "spring", "asp.net"],
      "file_patterns": ["*.py", "*.php", "*.java", "*.cs", "*.rb", "*.go", "*.js", "*.ts"],
      "description": "Server-side applications and APIs"
    },
    "mobile_app": {
      "indicators": ["react-native", "flutter", "xamarin", "ionic", "capacitor", "cordova", "phonegap"],
      "file_patterns": ["*.dart", "*.swift", "*.kt", "*.java", "*.xml", "*.storyboard"],
      "description": "Cross-platform and native mobile applications"
    },
    "data_science": {
      "indicators": ["pandas", "numpy", "scikit-learn", "tensorflow", "pytorch", "matplotlib", "seaborn", "plotly"],
      "file_patterns": ["*.ipynb", "*.py", "*.r", "*.sql", "*.csv", "*.json"],
      "description": "Data analysis, machine learning, and scientific computing"
    },
    "blockchain": {
      "indicators": ["ethereum", "solidity", "web3", "hyperledger", "substrate", "cosmos", "polkadot"],
      "file_patterns": ["*.sol", "*.rs", "*.go", "*.js", "*.py"],
      "description": "Decentralized applications and smart contracts"
    },
    "devops": {
      "indicators": ["docker", "kubernetes", "terraform", "ansible", "jenkins", "github-actions", "gitlab-ci"],
      "file_patterns": ["Dockerfile", "*.yml", "*.yaml", "*.tf", "*.hcl", "*.sh"],
      "description": "Infrastructure automation and deployment"
    },
    "game_development": {
      "indicators": ["unity", "unreal", "godot", "phaser", "three.js", "babylon.js", "pixi.js"],
      "file_patterns": ["*.unity", "*.prefab", "*.scene", "*.tscn", "*.gd", "*.cs"],
      "description": "Interactive games and 3D applications"
    },
    "desktop_app": {
      "indicators": ["electron", "tauri", "qt", "gtk", "wxwidgets", "swing", "javafx"],
      "file_patterns": ["*.cs", "*.java", "*.py", "*.cpp", "*.h", "*.ui", "*.qml"],
      "description": "Cross-platform desktop applications"
    },
    "cli_tool": {
      "indicators": ["click", "argparse", "commander", "yargs", "clap", "cobra"],
      "file_patterns": ["*.py", "*.js", "*.rs", "*.go", "*.sh", "*.ps1"],
      "description": "Command-line interface tools and utilities"
    },
    "library": {
      "indicators": ["setup.py", "pyproject.toml", "package.json", "Cargo.toml", "go.mod", "pom.xml"],
      "file_patterns": ["src/", "lib/", "include/", "*.h", "*.py", "*.js", "*.rs"],
      "description": "Reusable code libraries and packages"
    }
  },
  "skill_extraction": {
    "from_file_content": {
      "python": ["import ", "from ", "def ", "class ", "async def", "await ", "asyncio"],
      "javascript": ["import ", "export ", "const ", "let ", "var ", "function ", "=>", "async "],
      "typescript": ["interface ", "type ", "enum ", "namespace ", "declare ", "import type"],
      "php": ["<?php", "namespace ", "use ", "class ", "function ", "public ", "private "],
      "java": ["public class", "import ", "package ", "@Override", "@Service", "@Component"],
      "react": ["import React", "useState", "useEffect", "useContext", "useReducer", "JSX"],
      "vue": ["<template>", "<script>", "<style>", "export default", "Vue.component"],
      "angular": ["@Component", "@Injectable", "@NgModule", "ngOnInit", "ngOnDestroy"],
      "django": ["from django", "class Meta:", "def get_queryset", "models.Model"],
      "flask": ["from flask", "@app.route", "Flask(__name__)", "request.json"],
      "laravel": ["Route::", "class Controller", "Eloquent", "DB::table", "Auth::"],
      "express": ["const express", "app.get(", "app.post(", "app.use(", "router."],
      "docker": ["FROM ", "RUN ", "COPY ", "ENV ", "EXPOSE ", "CMD ["],
      "kubernetes": ["apiVersion:", "kind:", "metadata:", "spec:", "containers:"],
      "terraform": ["resource ", "data ", "variable ", "output ", "module ", "provider "],
      "git": ["git add", "git commit", "git push", "git pull", "git branch", "git merge"],
      "sql": ["SELECT ", "INSERT ", "UPDATE ", "DELETE ", "CREATE TABLE", "ALTER TABLE"],
      "html": ["<!DOCTYPE html>", "<html>", "<head>", "<body>", "<div>", "<span>"],
      "css": ["{", "}", ":", ";", "margin", "padding", "display", "position"],
      "scss": ["@import", "@mixin", "@include", "@extend", "$", "&:", "nth-child"],
      "tailwind": ["bg-", "text-", "p-", "m-", "flex", "grid", "rounded", "shadow"],
      "bootstrap": ["class=\"btn", "class=\"card", "class=\"navbar", "class=\"container"],
      "webpack": ["const path", "module.exports", "entry:", "output:", "plugins:"],
      "vite": ["import { defineConfig }", "plugins:", "build:", "server:"],
      "jest": ["describe(", "test(", "it(", "expect(", "beforeEach(", "afterEach("],
      "pytest": ["def test_", "import pytest", "@pytest.fixture", "assert "],
      "cypress": ["describe(", "it(", "cy.visit", "cy.get(", "cy.click(", "cy.type("],
      "playwright": ["test(", "expect(", "page.goto", "page.click", "page.fill"],
      "storybook": ["export default", "Template.bind", "args:", "parameters:"],
      "next": ["import Link", "import Image", "getStaticProps", "getServerSideProps"],
      "nuxt": ["<NuxtLink>", "<NuxtImg>", "asyncData(", "fetch(", "middleware("],
      "gatsby": ["import { graphql }", "export const query", "StaticQuery", "useStaticQuery"],
      "svelte": ["<script>", "<style>", "export let", "$:", "onMount(", "createEventDispatcher"],
      "solid": ["import { createSignal", "createEffect", "createMemo", "Show", "For"],
      "preact": ["import { h }", "import { useState }", "import { useEffect }"],
      "inferno": ["import { render }", "import { Component }", "import { createElement }"],
      "lit": ["import { LitElement }", "static styles", "render()", "updated()"],
      "stencil": ["@Component", "@State", "@Prop", "@Event", "@Listen"],
      "alpine": ["x-data", "x-show", "x-if", "x-for", "x-bind", "x-on"],
      "stimulus": ["import { Controller }", "connect()", "disconnect()", "targets:"],
      "htmx": ["hx-get", "hx-post", "hx-put", "hx-delete", "hx-trigger", "hx-target"],
      "unocss": ["bg-", "text-", "p-", "m-", "flex", "grid", "rounded", "shadow"],
      "windicss": ["bg-", "text-", "p-", "m-", "flex", "grid", "rounded", "shadow"],
      "postcss": ["@import", "@custom-media", "@custom-selector", "@apply"],
      "autoprefixer": ["-webkit-", "-moz-", "-ms-", "-o-"],
      "babel": ["@babel/", "presets:", "plugins:", "targets:"],
      "esbuild": ["import * as esbuild", "esbuild.build", "esbuild.transform"],
      "rollup": ["import rollup", "export default", "input:", "output:", "plugins:"],
      "parcel": ["parcel build", "parcel watch", "parcel serve"],
      "snowpack": ["snowpack.config.js", "snowpack dev", "snowpack build"],
      "swc": ["@swc/core", "@swc/cli", "swc-loader", "swc-jest"],
      "eslint": ["eslint", "eslintrc", "rules:", "extends:", "plugins:"],
      "prettier": ["prettier", "prettierrc", "semi:", "singleQuote:", "tabWidth:"],
      "stylelint": ["stylelint", "stylelintrc", "rules:", "extends:", "plugins:"],
      "husky": ["husky", "pre-commit", "commit-msg", "post-merge"],
      "lint-staged": ["lint-staged", "*.js", "*.ts", "*.jsx", "*.tsx"],
      "commitizen": ["commitizen", "cz-conventional-changelog", "commitizen.config.js"],
      "conventional-changelog": ["conventional-changelog", "standard-version", "release-it"],
      "semantic-release": ["semantic-release", "@semantic-release/", "release.config.js"],
      "changesets": ["@changesets/cli", "changeset", "changesets/"],
      "lerna": ["lerna", "lerna.json", "lerna publish", "lerna version"],
      "nx": ["@nrwl/", "nx.json", "nx affected", "nx run-many"],
      "rush": ["@microsoft/rush", "rush.json", "rush update", "rush build"],
      "yarn": ["yarn", "yarn.lock", "yarn add", "yarn install"],
      "npm": ["npm", "package-lock.json", "npm install", "npm run"],
      "pnpm": ["pnpm", "pnpm-lock.yaml", "pnpm add", "pnpm install"],
      "bun": ["bun", "bun.lockb", "bun add", "bun install"],
      "pip": ["pip", "requirements.txt", "pip install", "pip freeze"],
      "poetry": ["poetry", "pyproject.toml", "poetry add", "poetry install"],
      "pipenv": ["pipenv", "Pipfile", "pipenv install", "pipenv shell"],
      "conda": ["conda", "environment.yml", "conda install", "conda env"],
      "maven": ["maven", "pom.xml", "mvn install", "mvn compile"],
      "gradle": ["gradle", "build.gradle", "gradle build", "gradle run"],
      "ant": ["ant", "build.xml", "ant build", "ant run"],
      "make": ["make", "Makefile", "make build", "make install"],
      "cmake": ["cmake", "CMakeLists.txt", "cmake ..", "cmake --build"],
      "ninja": ["ninja", "build.ninja", "ninja build", "ninja install"],
      "bazel": ["bazel", "WORKSPACE", "BUILD", "bazel build", "bazel test"],
      "buck": ["buck", ".buckconfig", "BUCK", "buck build", "buck test"],
      "pants": ["pants", "pants.toml", "pants build", "pants test"],
      "cargo": ["cargo", "Cargo.toml", "cargo build", "cargo run"],
      "go": ["go", "go.mod", "go build", "go run"],
      "rust": ["rust", "rustc", "cargo", "Rust.toml"],
      "swift": ["swift", "Package.swift", "swift build", "swift run"],
      "kotlin": ["kotlin", "build.gradle.kts", "kotlin build", "kotlin run"],
      "scala": ["scala", "build.sbt", "sbt compile", "sbt run"],
      "clojure": ["clojure", "project.clj", "lein build", "lein run"],
      "haskell": ["haskell", "ghc", "cabal", "stack"],
      "ocaml": ["ocaml", "ocamlc", "dune", "opam"],
      "fsharp": ["fsharp", "fsc", "dotnet", "paket"],
      "elixir": ["elixir", "mix", "mix.exs", "mix deps.get"],
      "erlang": ["erlang", "erl", "rebar", "rebar.config"],
      "clojurescript": ["clojurescript", "cljs", "shadow-cljs", "figwheel"],
      "reason": ["reason", "re", "bsb", "dune"],
      "rescript": ["rescript", "res", "bsb", "dune"],
      "elm": ["elm", "elm.json", "elm make", "elm reactor"],
      "purescript": ["purescript", "purs", "spago", "spago.dhall"],
      "idris": ["idris", "idris2", "package.yaml", "cabal"],
      "agda": ["agda", "agda-mode", "agda-stdlib", "cabal"],
      "coq": ["coq", "coqc", "coq_makefile", "opam"],
      "lean": ["lean", "leanpkg", "leanpkg.toml", "lake"],
      "fstar": ["fstar", "fstar.exe", "fstar.exe --verify", "fstar.exe --extract"],
      "metamath": ["metamath", "metamath.exe", "metamath.exe verify", "metamath.exe prove"],
      "isabelle": ["isabelle", "isabelle jedit", "isabelle build", "isabelle test"],
      "hol": ["hol", "hol", "hol build", "hol test"],
      "coq": ["coq", "coqc", "coq_makefile", "opam"],
      "lean": ["lean", "leanpkg", "leanpkg.toml", "lake"],
      "fstar": ["fstar", "fstar.exe", "fstar.exe --verify", "fstar.exe --extract"],
      "metamath": ["metamath", "metamath.exe", "metamath.exe verify", "metamath.exe prove"],
      "isabelle": ["isabelle", "isabelle jedit", "isabelle build", "isabelle test"],
      "hol": ["hol", "hol", "hol build", "hol test"]
    }
  },
  "profile_generation": {
    "current_profile_template": {
      "header": {
        "name": "Anthony Ofori Owusu",
        "roles": ["Data Analyst", "Developer"],
        "location": "Ghana",
        "status": "Always Learning & Building"
      },
      "social_links": {
        "twitter": "https://twitter.com/tonykflex",
        "stackoverflow": "https://stackoverflow.com/users/30638298",
        "instagram": "https://instagram.com/tonykflex",
        "discord": "https://discord.gg/kXHx89kZ"
      },
      "current_work": "Digital Birth Certificate System",
      "learning_focus": [
        "Advanced Python",
        "N8N automations",
        "Data Warehousing",
        "Machine Learning (Scikit-learn)",
        "PHP 8.4",
        "Blockchain Development"
      ],
      "collaboration_interests": [
        "Open-source data visualization libraries",
        "Digital Identity Systems"
      ],
      "expertise_areas": [
        "Universal Agentic Interface",
        "Data Analysis",
        "BIOS modding",
        "ETL workflows",
        "PHP Development",
        "Blockchain Integration"
      ]
    },
    "sections": {
      "current_focus": {
        "enabled": true,
        "title": "🌱 Current Focus",
        "max_technologies": 8,
        "description_template": "Currently focused on: {technologies}"
      },
      "featured_projects": {
        "enabled": true,
        "title": "🚀 Featured Projects",
        "max_projects": 6,
        "show_complexity": true,
        "show_metrics": true
      },
      "tech_stack": {
        "enabled": true,
        "title": "🛠️ Enhanced Tech Stack",
        "categorize": true,
        "max_per_category": 6
      },
      "skills_matrix": {
        "enabled": true,
        "title": "📊 Skills Matrix",
        "max_skills": 15,
        "show_proficiency": true
      },
      "recent_achievements": {
        "enabled": true,
        "title": "🏆 Recent Achievements",
        "include_metrics": true
      }
    },
    "styling": {
      "preserve_animations": true,
      "preserve_colors": true,
      "preserve_layout": true,
      "add_enhancements": true
    }
  },
  "output_settings": {
    "files": {
      "updated_profile": "README_UPDATED.md",
      "project_analysis": "project_analysis.json",
      "log_file": "github_profile_updater.log"
    },
    "formatting": {
      "indent_size": 2,
      "max_line_length": 120,
      "preserve_whitespace": true
    }
  },
  "performance_settings": {
    "scan_batch_size": 100,
    "max_concurrent_files": 10,
    "memory_limit_mb": 512,
    "timeout_seconds": 300
  }
}